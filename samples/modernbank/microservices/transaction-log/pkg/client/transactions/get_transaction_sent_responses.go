// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/tetrateio/training/samples/modernbank/microservices/transaction-log/pkg/model"
)

// GetTransactionSentReader is a Reader for the GetTransactionSent structure.
type GetTransactionSentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionSentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTransactionSentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTransactionSentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTransactionSentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTransactionSentOK creates a GetTransactionSentOK with default headers values
func NewGetTransactionSentOK() *GetTransactionSentOK {
	return &GetTransactionSentOK{}
}

/*GetTransactionSentOK handles this case with default header values.

Success!
*/
type GetTransactionSentOK struct {
	Payload *GetTransactionSentOKBody
}

func (o *GetTransactionSentOK) Error() string {
	return fmt.Sprintf("[GET /account/{sender}/sent/{transaction}][%d] getTransactionSentOK  %+v", 200, o.Payload)
}

func (o *GetTransactionSentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTransactionSentOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionSentNotFound creates a GetTransactionSentNotFound with default headers values
func NewGetTransactionSentNotFound() *GetTransactionSentNotFound {
	return &GetTransactionSentNotFound{}
}

/*GetTransactionSentNotFound handles this case with default header values.

Transaction not found
*/
type GetTransactionSentNotFound struct {
}

func (o *GetTransactionSentNotFound) Error() string {
	return fmt.Sprintf("[GET /account/{sender}/sent/{transaction}][%d] getTransactionSentNotFound ", 404)
}

func (o *GetTransactionSentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTransactionSentInternalServerError creates a GetTransactionSentInternalServerError with default headers values
func NewGetTransactionSentInternalServerError() *GetTransactionSentInternalServerError {
	return &GetTransactionSentInternalServerError{}
}

/*GetTransactionSentInternalServerError handles this case with default header values.

Internal server error
*/
type GetTransactionSentInternalServerError struct {
}

func (o *GetTransactionSentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /account/{sender}/sent/{transaction}][%d] getTransactionSentInternalServerError ", 500)
}

func (o *GetTransactionSentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetTransactionSentOKBody get transaction sent o k body
swagger:model GetTransactionSentOKBody
*/
type GetTransactionSentOKBody struct {
	model.Transaction

	model.Version
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetTransactionSentOKBody) UnmarshalJSON(raw []byte) error {
	// GetTransactionSentOKBodyAO0
	var getTransactionSentOKBodyAO0 model.Transaction
	if err := swag.ReadJSON(raw, &getTransactionSentOKBodyAO0); err != nil {
		return err
	}
	o.Transaction = getTransactionSentOKBodyAO0

	// GetTransactionSentOKBodyAO1
	var getTransactionSentOKBodyAO1 model.Version
	if err := swag.ReadJSON(raw, &getTransactionSentOKBodyAO1); err != nil {
		return err
	}
	o.Version = getTransactionSentOKBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetTransactionSentOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getTransactionSentOKBodyAO0, err := swag.WriteJSON(o.Transaction)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getTransactionSentOKBodyAO0)

	getTransactionSentOKBodyAO1, err := swag.WriteJSON(o.Version)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getTransactionSentOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get transaction sent o k body
func (o *GetTransactionSentOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with model.Transaction
	if err := o.Transaction.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with model.Version
	if err := o.Version.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetTransactionSentOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTransactionSentOKBody) UnmarshalBinary(b []byte) error {
	var res GetTransactionSentOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
