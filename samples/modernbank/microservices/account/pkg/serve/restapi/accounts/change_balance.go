// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ChangeBalanceHandlerFunc turns a function with the right signature into a change balance handler
type ChangeBalanceHandlerFunc func(ChangeBalanceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ChangeBalanceHandlerFunc) Handle(params ChangeBalanceParams) middleware.Responder {
	return fn(params)
}

// ChangeBalanceHandler interface for that can handle valid change balance params
type ChangeBalanceHandler interface {
	Handle(ChangeBalanceParams) middleware.Responder
}

// NewChangeBalance creates a new http.Handler for the change balance operation
func NewChangeBalance(ctx *middleware.Context, handler ChangeBalanceHandler) *ChangeBalance {
	return &ChangeBalance{Context: ctx, Handler: handler}
}

/*ChangeBalance swagger:route PUT /accounts/{number}/balance/{delta} accounts changeBalance

Change the balance of an account

Change the balance of an account

*/
type ChangeBalance struct {
	Context *middleware.Context
	Handler ChangeBalanceHandler
}

func (o *ChangeBalance) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewChangeBalanceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
