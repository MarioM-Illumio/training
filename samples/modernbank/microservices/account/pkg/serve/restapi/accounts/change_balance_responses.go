// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ChangeBalanceOKCode is the HTTP code returned for type ChangeBalanceOK
const ChangeBalanceOKCode int = 200

/*ChangeBalanceOK OK

swagger:response changeBalanceOK
*/
type ChangeBalanceOK struct {
	/*Version of the microservice that responded

	 */
	Version string `json:"version"`
}

// NewChangeBalanceOK creates ChangeBalanceOK with default headers values
func NewChangeBalanceOK() *ChangeBalanceOK {

	return &ChangeBalanceOK{}
}

// WithVersion adds the version to the change balance o k response
func (o *ChangeBalanceOK) WithVersion(version string) *ChangeBalanceOK {
	o.Version = version
	return o
}

// SetVersion sets the version to the change balance o k response
func (o *ChangeBalanceOK) SetVersion(version string) {
	o.Version = version
}

// WriteResponse to the client
func (o *ChangeBalanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header version

	version := o.Version
	if version != "" {
		rw.Header().Set("version", version)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ChangeBalanceNotFoundCode is the HTTP code returned for type ChangeBalanceNotFound
const ChangeBalanceNotFoundCode int = 404

/*ChangeBalanceNotFound Account not found

swagger:response changeBalanceNotFound
*/
type ChangeBalanceNotFound struct {
	/*Version of the microservice that responded

	 */
	Version string `json:"version"`
}

// NewChangeBalanceNotFound creates ChangeBalanceNotFound with default headers values
func NewChangeBalanceNotFound() *ChangeBalanceNotFound {

	return &ChangeBalanceNotFound{}
}

// WithVersion adds the version to the change balance not found response
func (o *ChangeBalanceNotFound) WithVersion(version string) *ChangeBalanceNotFound {
	o.Version = version
	return o
}

// SetVersion sets the version to the change balance not found response
func (o *ChangeBalanceNotFound) SetVersion(version string) {
	o.Version = version
}

// WriteResponse to the client
func (o *ChangeBalanceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header version

	version := o.Version
	if version != "" {
		rw.Header().Set("version", version)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// ChangeBalanceInternalServerErrorCode is the HTTP code returned for type ChangeBalanceInternalServerError
const ChangeBalanceInternalServerErrorCode int = 500

/*ChangeBalanceInternalServerError Internal server error

swagger:response changeBalanceInternalServerError
*/
type ChangeBalanceInternalServerError struct {
	/*Version of the microservice that responded

	 */
	Version string `json:"version"`
}

// NewChangeBalanceInternalServerError creates ChangeBalanceInternalServerError with default headers values
func NewChangeBalanceInternalServerError() *ChangeBalanceInternalServerError {

	return &ChangeBalanceInternalServerError{}
}

// WithVersion adds the version to the change balance internal server error response
func (o *ChangeBalanceInternalServerError) WithVersion(version string) *ChangeBalanceInternalServerError {
	o.Version = version
	return o
}

// SetVersion sets the version to the change balance internal server error response
func (o *ChangeBalanceInternalServerError) SetVersion(version string) {
	o.Version = version
}

// WriteResponse to the client
func (o *ChangeBalanceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header version

	version := o.Version
	if version != "" {
		rw.Header().Set("version", version)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
