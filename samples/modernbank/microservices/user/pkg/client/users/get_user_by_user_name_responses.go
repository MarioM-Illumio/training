// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/tetrateio/training/samples/modernbank/microservices/user/pkg/model"
)

// GetUserByUserNameReader is a Reader for the GetUserByUserName structure.
type GetUserByUserNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByUserNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserByUserNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetUserByUserNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUserByUserNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserByUserNameOK creates a GetUserByUserNameOK with default headers values
func NewGetUserByUserNameOK() *GetUserByUserNameOK {
	return &GetUserByUserNameOK{}
}

/*GetUserByUserNameOK handles this case with default header values.

Success!
*/
type GetUserByUserNameOK struct {
	Payload *GetUserByUserNameOKBody
}

func (o *GetUserByUserNameOK) Error() string {
	return fmt.Sprintf("[GET /users/{username}][%d] getUserByUserNameOK  %+v", 200, o.Payload)
}

func (o *GetUserByUserNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserByUserNameOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByUserNameNotFound creates a GetUserByUserNameNotFound with default headers values
func NewGetUserByUserNameNotFound() *GetUserByUserNameNotFound {
	return &GetUserByUserNameNotFound{}
}

/*GetUserByUserNameNotFound handles this case with default header values.

User not found
*/
type GetUserByUserNameNotFound struct {
}

func (o *GetUserByUserNameNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{username}][%d] getUserByUserNameNotFound ", 404)
}

func (o *GetUserByUserNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserByUserNameInternalServerError creates a GetUserByUserNameInternalServerError with default headers values
func NewGetUserByUserNameInternalServerError() *GetUserByUserNameInternalServerError {
	return &GetUserByUserNameInternalServerError{}
}

/*GetUserByUserNameInternalServerError handles this case with default header values.

Internal server error
*/
type GetUserByUserNameInternalServerError struct {
}

func (o *GetUserByUserNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{username}][%d] getUserByUserNameInternalServerError ", 500)
}

func (o *GetUserByUserNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetUserByUserNameOKBody get user by user name o k body
swagger:model GetUserByUserNameOKBody
*/
type GetUserByUserNameOKBody struct {
	model.User

	model.Version
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetUserByUserNameOKBody) UnmarshalJSON(raw []byte) error {
	// GetUserByUserNameOKBodyAO0
	var getUserByUserNameOKBodyAO0 model.User
	if err := swag.ReadJSON(raw, &getUserByUserNameOKBodyAO0); err != nil {
		return err
	}
	o.User = getUserByUserNameOKBodyAO0

	// GetUserByUserNameOKBodyAO1
	var getUserByUserNameOKBodyAO1 model.Version
	if err := swag.ReadJSON(raw, &getUserByUserNameOKBodyAO1); err != nil {
		return err
	}
	o.Version = getUserByUserNameOKBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetUserByUserNameOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getUserByUserNameOKBodyAO0, err := swag.WriteJSON(o.User)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getUserByUserNameOKBodyAO0)

	getUserByUserNameOKBodyAO1, err := swag.WriteJSON(o.Version)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getUserByUserNameOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get user by user name o k body
func (o *GetUserByUserNameOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with model.User
	if err := o.User.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with model.Version
	if err := o.Version.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserByUserNameOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserByUserNameOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserByUserNameOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
